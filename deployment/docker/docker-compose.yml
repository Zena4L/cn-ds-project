version: "3.8"
services:
  ds-postgres:
    image: "postgres:latest"
    container_name: ds-postgres
    ports:
      - "5431:5432"
    environment:
      - POSTGRES_USER=user
      - POSTGRES_PASSWORD=password
    volumes:
      - ./postgresql/init.sql:/docker-entrypoint-initdb.d/init.sql

  ds-redis:
    image: "redis:latest"
    container_name: ds-redis
    ports:
      - "6379:6379"

  zookeeper:
    image: wurstmeister/zookeeper
    container_name: zookeeper
    ports:
      - "2181:2181"

  kafka:
    image: wurstmeister/kafka
    container_name: kafka
    ports:
      - "9092:9092"
      - "9093:9093"
    environment:
      KAFKA_ADVERTISED_LISTENERS: INSIDE://kafka:9092,OUTSIDE://127.0.0.1:9093
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: INSIDE:PLAINTEXT,OUTSIDE:PLAINTEXT
      KAFKA_LISTENERS: INSIDE://0.0.0.0:9092,OUTSIDE://0.0.0.0:9093
      KAFKA_INTER_BROKER_LISTENER_NAME: INSIDE
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1

  product-service:
    depends_on:
      - ds-postgres
      - config-service
    image: zena07/product-service
    container_name: product-service
    ports:
      - "3000:3000"
      - "3001:3001"
    environment:
      - BPL_JVM_THREAD_COUNT=50
      - SPRING_DATASOURCE_URL=jdbc:postgresql://ds-postgres:5432/product
      - SPRING_PROFILE_ACTIVE=dev
      - SPRING_CLOUD_CONFIG_URI=http://config-service:8888
      - BPL_DEBUG_ENABLED=true

  order-service:
    depends_on:
      - ds-postgres
      - config-service
    image: zena07/order-service
    container_name: order-service
    ports:
      - "3002:3002"
      - "3003:3003"
    environment:
      - BPL_JVM_THREAD_COUNT=50
      - SPRING_R2DBC_URL=r2dbc:postgresql://ds-postgres:5432/order_service
      - SPRING_FLYWAY_URL=jdbc:postgresql://ds-postgres:5432/order_service
      - SPRING_PROFILE_ACTIVE=dev
      - SPRING_CLOUD_CONFIG_URI=http://config-service:8888
      - BPL_DEBUG_ENABLED=true


  config-service:
    image: zena07/dn-config
    container_name: config-service
    ports:
      - "8888:8888"
    environment:
      - BPL_JVM_THREAD_COUNT=50

  delivery-service:
    image: zena07/delivery-service
    container_name: delivery-service
    depends_on:
      - config-service
      - kafka
    ports:
      - "3006:3006"
    environment:
      - BPL_JVM_THREAD_COUNT=50
      - SERVER_PORT=3006
      - SERVER_TOMCAT_CONNECTION_TIMEOUT=2s
      - SERVER_TOMCAT_THREADS_MAX=50
      - SERVER_TOMCAT_THREADS_MIN_SPARE=5
      - SERVER_SHUTDOWN=graceful
      - SPRING_CLOUD_FUNCTION_DEFINITION=pack|label
      - SPRING_CLOUD_STREAM_BINDINGS_PACKLABEL_IN_0_DESTINATION=order-accepted
      - SPRING_CLOUD_STREAM_BINDINGS_PACKLABEL_IN_0_CONTENT_TYPE=application/json
      - SPRING_CLOUD_STREAM_BINDINGS_PACKLABEL_OUT_0_DESTINATION=order-dispatched
      - SPRING_CLOUD_STREAM_BINDINGS_PACKLABEL_OUT_0_CONTENT_TYPE=application/json
      - SPRING_CLOUD_STREAM_DEFAULT_BINDER=kafka
      - SPRING_CLOUD_STREAM_KAFKA_BINDER_BROKERS=kafka:9092
      - SPRING_PROFILES_ACTIVE=dev
      - SPRING_CLOUD_CONFIG_URI=http://config-service:8888


  edge-service:
    image: zena07/edge-service
    container_name: edge-service
    ports:
      - "8080:8080"
      - "8081:8081"
    environment:
      - BPL_JVM_THREAD_COUNT=50
      - PRODUCT_SERVICE_URL=http://product-service:3000
      - ORDER_SERVICE_URL=http://order-service:3002
      - SPRING_DATA_REDIS_HOST=redis
      - SPRING_DATA_REDIS_PORT=6379
      - SPRING_CLOUD_CONFIG_URI=http://config-service:8888
      - LOGGING_LEVEL_IO_GITHUB_RESILIENCE4J=DEBUG

